var documenterSearchIndex = {"docs":
[{"location":"#Upset.jl-Documentation","page":"Upset.jl Documentation","title":"Upset.jl Documentation","text":"","category":"section"},{"location":"","page":"Upset.jl Documentation","title":"Upset.jl Documentation","text":"","category":"page"},{"location":"#Functions","page":"Upset.jl Documentation","title":"Functions","text":"","category":"section"},{"location":"#Upset.plot_upset-Tuple{Any}","page":"Upset.jl Documentation","title":"Upset.plot_upset","text":"plotupset(dictin)\n\nCompute an upset plot giving a dictionary of lists. Each list in the dictionary is a list of the unique elements that are present in a set. Used for comparing presence of unique items across groups.\n\nRequires that there exists more than one list in the dictionary in order to look for overlap.\n\nAlso requires that at least one list has one item present in it.\n\nExamples\n\n\njulia> a =    input_dict = Dict(\n               \"list1\" => ['l','t','A','B'],\n               \"list2\" => ['l','t','A','B','C','l'])\n\nDict{String, Vector{Char}} with 2 entries:\n  \"list1\" => ['l', 't', 'A', 'B']\n  \"list2\" => ['l', 't', 'A', 'B', 'C', 'l']\n\njulia> result = plot_upset(a) \n\n2-element Vector{Any}:\n Plot{Plots.GRBackend() n=8}\nCaptured extra kwargs:\n  Series{3}:\n    series_annotations_align: right\n  Series{4}:\n    series_annotations_align: right\n\n Vector{Any}[[4, 1], [\"list1\", \"list2\", \"list2\"]]\n\n\n\n\n\n\n","category":"method"},{"location":"#Index","page":"Upset.jl Documentation","title":"Index","text":"","category":"section"},{"location":"","page":"Upset.jl Documentation","title":"Upset.jl Documentation","text":"","category":"page"}]
}
